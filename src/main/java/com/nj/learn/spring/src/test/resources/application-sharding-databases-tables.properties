##
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
#
#指定数据源
spring.shardingsphere.datasource.names=ds-0,ds-1

spring.shardingsphere.datasource.ds-0.jdbc-url=jdbc:mysql://localhost:3326/demo_ds_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.ds-0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds-0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds-0.username=root
spring.shardingsphere.datasource.ds-0.password=
spring.shardingsphere.datasource.ds-0.max-active=16

spring.shardingsphere.datasource.ds-1.jdbc-url=jdbc:mysql://localhost:3336/demo_ds_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.ds-1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds-1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds-1.username=root
spring.shardingsphere.datasource.ds-1.password=
spring.shardingsphere.datasource.ds-1.max-active=16

#spring.shardingsphere.sharding.default-database-strategy.standard.sharding-column=user_id
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
#spring.shardingsphere.sharding.default-database-strategy.standard.precise-algorithm-class-name=database-inline
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds-$->{user_id % 2}
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.rules.sharding.binding-tables=t_order,t_order_item
#spring.shardingsphere.rules.sharding.broadcast-tables=t_address

#t_order分片策略
#实际节点
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds-$->{0..1}.t_order_$->{0..15}
#分片键
#spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
#分片策略(这里使用的行表达式分片策略)
#spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=t-order-inline
#spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.precise-algorithm-class-name=t-order-inline
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 16}

#主键生成策略
#spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
#spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE

#定义的策略
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds-$->{user_id % 2}
#spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.algorithm-expression=t_order_$->{order_id % 16}

#spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
#spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123


# 打开sql输出日志
spring.shardingsphere.props.sql.show=true













## 配置真实数据源
#spring.shardingsphere.datasource.names=ds0,ds1
## 配置第 1 个数据源
#spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3316/demo_ds_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.shardingsphere.datasource.ds0.username=root
#spring.shardingsphere.datasource.ds0.password=
## 配置第 2 个数据源
##5.1. ShardingSphere-JDBC 173
##Apache ShardingSphere document
#spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3316/demo_ds_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.shardingsphere.datasource.ds1.username=root
#spring.shardingsphere.datasource.ds1.password=
## 配置 t_order 表规则
#spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_$->{0..15}
## 配置分库策略
#spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
#spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=database_inline
## 配置分表策略
#spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
#spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=table_inline
#
##主键生成策略
#spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
#spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=SNOWFLAKE
#
## 省略配置 t_order_item 表规则...
## ...
## 配置 分片算法
#spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.props.algorithm-expression=ds_$->{user_id % 2}
#spring.shardingsphere.rules.sharding.sharding-algorithms.table_inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.table_inline.props.algorithm-expression=t_order_$->{order_id % 16}
#
##
#spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
#spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123
### 打开sql输出日志
#spring.shardingsphere.props.sql.show=true